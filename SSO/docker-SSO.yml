version: "3"

services:
  postgresql:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: postgres
      POSTGRES_DB: GestioneCentriFitness_Users
    ports:
      - '5858:5432'
    networks:
      - sso

  pgadmin4:
    image: dpage/pgadmin4
    ports:
      - '5060:5050'
      - '96:80'
    links:
      - postgresql:postgresql
    depends_on:
      - postgresql
    environment:
      PGADMIN_DEFAULT_EMAIL: prova@prova.it
      PGADMIN_DEFAULT_PASSWORD: prova
    networks:
      - sso

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - sso

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://sso-kafka-1:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - sso

  sso:
    build: .
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgresql
      - kafka
    networks:
      - sso
      - microservice-network

  sso-initdb:
    build: .
    command: >
      sh -c "
      sleep 10 && python manage.py initdb"
    volumes:
      - .:/app
    depends_on:
      - sso
    networks:
      - sso
      
  sso-consumer:
    build: .
    command: >
      sh -c "
      sleep 15 && python manage.py runConsumer"
    volumes:
      - .:/app
    depends_on:
      - sso
      - kafka
    networks:
      - sso

networks:
  sso:
    external: false
  microservice-network:
    external: true